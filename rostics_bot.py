from flask import Flask
from threading import Thread
from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import Application, CommandHandler, MessageHandler, filters, CallbackContext
import logging
import os

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s", level=logging.INFO
)
logger = logging.getLogger(__name__)

# –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ Secrets
TOKEN = os.environ.get("TELEGRAM_BOT_TOKEN")
if not TOKEN:
    raise ValueError("–¢–æ–∫–µ–Ω –±–æ—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ Secrets!")
else:
    logger.info("–¢–æ–∫–µ–Ω —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω –∏–∑ Secrets.")

# –°–æ–∑–¥–∞–µ–º Flask –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
app = Flask(__name__)

# –ú–∞—Ä—à—Ä—É—Ç –¥–ª—è –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
@app.route('/')
def home():
    return "–ë–æ—Ç –∞–∫—Ç–∏–≤–µ–Ω!"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ Flask —Å–µ—Ä–≤–µ—Ä–∞
def run_flask():
    logger.info("Flask —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...")
    port = int(os.environ.get("PORT", 5000))  # –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–æ—Ä—Ç –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è
    app.run(host='0.0.0.0', port=port)  # –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ–º –∫ 0.0.0.0

# –ó–∞–ø—É—Å–∫ Flask —Å–µ—Ä–≤–µ—Ä–∞ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
def keep_alive():
    t = Thread(target=run_flask)
    t.start()

# –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
async def start(update: Update, context: CallbackContext):
    logger.info("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–ø—É—Å—Ç–∏–ª –±–æ—Ç–∞")
    welcome_message = "–ü—Ä–∏–≤–µ—Ç, —è –±–æ—Ç –ø–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∞–º Rostics! üçü\n–í—ã–±–µ—Ä–∏ —Å–≤–æ—é —Å—Ç–∞–Ω—Ü–∏—é –∏ –ø–æ–¥—Ä–∞–∑–¥–µ–ª:"
    buttons = [["1. –ö–∞—Å—Å–∞", "2. –°–µ—Ä–≤–∏—Å"], ["3. –ö—É—Ö–Ω—è", "4. –ú–æ–π–∫–∞"], ["5. –ú—ã—Ç—å–µ —Ä—É–∫ –∏ —Ö–∏–º–∏—è"]]
    reply_markup = ReplyKeyboardMarkup(buttons, one_time_keyboard=True, resize_keyboard=True)
    await update.message.reply_text(welcome_message, reply_markup=reply_markup)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —Å—Ç–∞–Ω—Ü–∏–∏ –∏ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–∞
async def handle_message(update: Update, context: CallbackContext):
    logger.info(f"–ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ: {update.message.text}")
    text = update.message.text
    if text in ["1. –ö–∞—Å—Å–∞", "2. –°–µ—Ä–≤–∏—Å", "3. –ö—É—Ö–Ω—è", "4. –ú–æ–π–∫–∞", "5. –ú—ã—Ç—å–µ —Ä—É–∫ –∏ —Ö–∏–º–∏—è"]:
        if text == "1. –ö–∞—Å—Å–∞":
            buttons = [
                ["1. –°—Ä–æ–∫–∏ –≥–æ–¥–Ω–æ—Å—Ç–∏", "2. –°–µ—Ä–≤–∏—Ä–æ–≤–∫–∞ –∏ —Å–±–æ—Ä–∫–∞"],
                ["3. –ù–∞–ø–∏—Ç–∫–∏ –∏ –¥–µ—Å–µ—Ä—Ç—ã", "4. –û—Å—Ç–∞–ª—å–Ω–æ–µ"],
                ["–ù–∞–∑–∞–¥"]
            ]
            reply_markup = ReplyKeyboardMarkup(buttons, one_time_keyboard=True, resize_keyboard=True)
            await update.message.reply_text("–í—ã–±–µ—Ä–∏ –ø–æ–¥—Ä–∞–∑–¥–µ–ª –ö–∞—Å—Å—ã:", reply_markup=reply_markup)
        elif text == "2. –°–µ—Ä–≤–∏—Å":
            buttons = [
                ["1. –°—Ä–æ–∫–∏ –≥–æ–¥–Ω–æ—Å—Ç–∏ –∏ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ", "2. –°–æ—Å—Ç–∞–≤—ã"],
                ["3. –§—Ä–∏—Ç—é—Ä"],
                ["–ù–∞–∑–∞–¥"]
            ]
            reply_markup = ReplyKeyboardMarkup(buttons, one_time_keyboard=True, resize_keyboard=True)
            await update.message.reply_text("–í—ã–±–µ—Ä–∏ –ø–æ–¥—Ä–∞–∑–¥–µ–ª –°–µ—Ä–≤–∏—Å–∞:", reply_markup=reply_markup)
        elif text == "3. –ö—É—Ö–Ω—è":
            buttons = [
                ["1. –®–æ—Ä—Ç–µ–Ω–∏–Ω–≥ (–∂–∏—Ä)", "2. –î–µ—Ñ—Ä–æ—Å—Ç–∞—Ü–∏—è"],
                ["3. –°—Ä–æ–∫–∏ —Ö—Ä–∞–Ω–µ–Ω–∏—è", "4. –ü–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ"],
                ["5. –ñ–∞—Ä–∏–º"],
                ["–ù–∞–∑–∞–¥"]
            ]
            reply_markup = ReplyKeyboardMarkup(buttons, one_time_keyboard=True, resize_keyboard=True)
            await update.message.reply_text("–í—ã–±–µ—Ä–∏ –ø–æ–¥—Ä–∞–∑–¥–µ–ª –ö—É—Ö–Ω–∏:", reply_markup=reply_markup)
        elif text == "4. –ú–æ–π–∫–∞":
            await send_washing_info(update)
        elif text == "5. –ú—ã—Ç—å–µ —Ä—É–∫ –∏ —Ö–∏–º–∏—è":
            await send_washing_info(update)
    elif text == "–ù–∞–∑–∞–¥":
        await start(update, context)
    elif text == "2. –î–µ—Ñ—Ä–æ—Å—Ç–∞—Ü–∏—è":
        await send_defrost_info(update)
    elif text == "1. –®–æ—Ä—Ç–µ–Ω–∏–Ω–≥ (–∂–∏—Ä)":
        await send_shortening_info(update)
    elif text == "5. –ñ–∞—Ä–∏–º":
        await send_frying_info(update)
    elif text == "4. –ü–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ":
        await send_paniruem_info(update)
    elif text == "3. –°—Ä–æ–∫–∏ —Ö—Ä–∞–Ω–µ–Ω–∏—è":
        await send_srok_hraneniya_info(update)
    elif text == "2. –°–µ—Ä–≤–∏—Ä–æ–≤–∫–∞ –∏ —Å–±–æ—Ä–∫–∞":
        await send_servirovka_info(update)
    elif text == "3. –ù–∞–ø–∏—Ç–∫–∏ –∏ –¥–µ—Å–µ—Ä—Ç—ã":
        await send_drinks_info(update)
    elif text == "4. –û—Å—Ç–∞–ª—å–Ω–æ–µ":
        await send_other_info(update)
    elif text == "1. –°—Ä–æ–∫–∏ –≥–æ–¥–Ω–æ—Å—Ç–∏ –∏ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ":
        await send_srok_godnosti_info(update)
    elif text == "2. –°–æ—Å—Ç–∞–≤—ã":
        await send_sostav_info(update)
    elif text == "3. –§—Ä–∏—Ç—é—Ä":
        await send_fryer_info(update)
    elif text == "1. –°—Ä–æ–∫–∏ –≥–æ–¥–Ω–æ—Å—Ç–∏":
        await send_sroki_godnosti_kassa_info(update)
    elif text == "–ü—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏–µ –∑–∞–º–µ—Å–∞":
        await send_zames_info(update)
    elif text == "–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
        await start(update, context)
    else:
        await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏ –ø–æ–¥—Ä–∞–∑–¥–µ–ª –∏–∑ —Å–ø–∏—Å–∫–∞.")

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å—Ä–æ–∫–∞—Ö –≥–æ–¥–Ω–æ—Å—Ç–∏ –≤ —Ä–∞–∑–¥–µ–ª–µ –ö–∞—Å—Å—ã
async def send_sroki_godnosti_kassa_info(update: Update):
    try:
        await update.message.reply_photo(photo="https://i.ibb.co/nBNzkRh/sroki.jpg")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ send_sroki_godnosti_kassa_info: {e}")
    await show_main_menu(update)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –¥–µ—Ñ—Ä–æ—Å—Ç–∞—Ü–∏–∏
async def send_defrost_info(update: Update):
    try:
        messages = [
            "–ú—è—Å–æ —Ä–∞–∑–º–æ—Ä–∞–∂–∏–≤–∞–µ—Ç—Å—è —Å—É—Ç–∫–∏, —Ö—Ä–∞–Ω–∏—Ç—Å—è –ø–æ—Å–ª–µ —ç—Ç–æ–≥–æ –¥–≤–æ–µ. –≠–∫—Å—Ç—Ä–µ–Ω–Ω–∞—è —Ä–∞–∑–º–æ—Ä–æ–∑–∫–∞ –º—è—Å–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è –≤ –≤–æ–¥–µ, –≤ —Å—Ä–µ–¥–Ω–µ–π —Ä–∞–∫–æ–≤–∏–Ω–µ, –ø—Ä–∏ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–µ –Ω–µ –±–æ–ª–µ–µ 21, —Å—Ä–æ–∫ –≥–æ–¥–Ω–æ—Å—Ç–∏ –≤–∫–ª—é—á–∞—è –≤—Ä–µ–º—è —Ä–∞–∑–º–æ—Ä–æ–∑–∫–∏ (1,5 —á) - 12 —á–∞—Å–æ–≤.",
            "–≠–∫—Å—Ç—Ä–µ–Ω–Ω–∞—è —Ä–∞–∑–º–æ—Ä–æ–∑–∫–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è –≤ —Å—Ä–µ–¥–Ω–µ–π —Ä–∞–∫–æ–≤–∏–Ω–µ, –≤ –º–∞—Ä–º–∏–¥–µ, —Å—Ç–æ—è–≤—à–µ–º –≤—ã—à–µ —É—Ä–æ–≤–Ω—è –º–æ–π–∫–∏, —Ä–µ—à—ë—Ç–∫–∏ –æ—Ç–¥–µ–ª—è—é—Ç –ø–∞–∫–µ—Ç—ã –¥—Ä—É–≥ –æ—Ç –¥—Ä—É–≥–∞, –≤–æ–¥–∞ –Ω–µ–ø—Ä–µ—Ä—ã–≤–Ω–æ —Ü–∏—Ä–∫—É–ª–∏—Ä—É–µ—Ç."
        ]
        for message in messages:
            await update.message.reply_text(message)
        await update.message.reply_photo(photo="https://i.ibb.co/JzHvHWg/defrost.jpg")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ send_defrost_info: {e}")
    await show_main_menu(update)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —à–æ—Ä—Ç–µ–Ω–∏–Ω–≥–µ (–∂–∏—Ä–µ)
async def send_shortening_info(update: Update):
    try:
        messages = [
            "–í—Ä–∞–≥–∏ –∂–∏—Ä–∞: —Ö–∏–º–∏—è, –º–µ—Ç–∞–ª–ª, —Å–æ–ª—å, –≤–æ–¥–∞, —Ç–µ–ø–ª–æ, –≤–æ–∑–¥—É—Ö, —á–∞—Å—Ç–∏—Ü—ã –ø–∏—â–∏.",
            "–ü—Ä–∏–∑–Ω–∞–∫–∏ –∏—Å–ø–æ—Ä—á–µ–Ω–Ω–æ–≥–æ –∂–∏—Ä–∞: —Ü–≤–µ—Ç, –∑–∞–ø–∞—Ö, –≤–∫—É—Å, –∑–∞–¥—ã–º–ª–µ–Ω–∏–µ, –ø–µ–Ω–æ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ.",
            "–§–∏–ª—å—Ç—Ä–∞—Ü–∏—è - –Ω–∞–¥–µ–≤–∞–µ–º –°–ò–ó, –≤—ã–∫–ª—é—á–∞–µ–º –º–∞—à–∏–Ω–∫—É, –≤–∫–ª—é—á–∞–µ–º –Ω–∞–ø–æ—Ä –∏ —Å–ª–∏–≤ –∂–∏—Ä–∞. –ß–∏—Å—Ç–∏–º –∫–æ—á–µ—Ä–≥–æ–π, –ø–æ–¥–Ω–∏–º–∞–µ–º –∂–∏—Ä.",
            "–û—Ç–∫—Ä—ã—Ç—ã–π —Ñ—Ä–∏—Ç—é—Ä —Ñ–∏–ª—å—Ç—Ä—É–µ—Ç—Å—è –Ω–µ –±–æ–ª–µ–µ 5 –º–∏–Ω—É—Ç, –∑–∞–∫—Ä—ã—Ç—ã–π –Ω–µ –±–æ–ª–µ–µ 7. –ú–∞–≥–Ω–µ–∑–æ–ª—è—Ç—Å—è –º–∞—à–∏–Ω–∫–∏ 15 –º–∏–Ω—É—Ç. –ú–∞–≥–Ω–µ–∑–æ–ª –¥–µ–ª–∞—é—Ç –¥–≤–∞ —Ä–∞–∑–∞ –≤ –¥–µ–Ω—å: —É—Ç—Ä–æ–º –¥–æ –ø–µ—Ä–≤–æ–π –ø–∞—Ä—Ç–∏–∏ –º—è—Å–∞ –∏ –ø–æ—Å–ª–µ —á–∞—Å–∞-–ø–∏–∫–∞.",
            "38 –≥—Ä–∞–¥—É—Å–æ–≤ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –ø–µ—Ä–µ–ª–∏–≤–∞ –∂–∏—Ä–∞."
        ]
        for message in messages:
            await update.message.reply_text(message)
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ send_shortening_info: {e}")
    await show_main_menu(update)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∂–∞—Ä–∫–µ
async def send_frying_info(update: Update):
    try:
        messages = [
            "–ö—Ä—ã–ª–æ –∂–∞—Ä–∏—Ç—Å—è 10 –º–∏–Ω—É—Ç, –±–∞–π—Ç—Å—ã 3:05, —Å—Ç—Ä–∏–ø—Å—ã 4:30, –∑–∏–Ω–≥–µ—Ä 7 –º–∏–Ω—É—Ç. –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ 171.",
            "–û—Ä–∏–≥ —Å—Ç—Ä–∏–ø—Å—ã 1 –ø–∞–∫–µ—Ç - 178 –≥—Ä–∞–¥—É—Å–æ–≤, 2 - 182. –ù–æ–≥–∏ –ø–∞–∫–µ—Ç 154, –¥–≤–∞ –ø–∞–∫–µ—Ç–∞ - 168, 3 –ø–∞–∫–µ—Ç–∞ 174, 4 –ø–∞–∫–µ—Ç–∞ 182. –§–∏–ª–µ –æ—Ä - 182.",
            "–î–ª—è –¥–µ–∑–∏–Ω—Ñ–µ–∫—Ü–∏–∏ –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–µ–π –∏—Å–ø–æ–ª—å–∑—É–µ–º –º–∏–∫—Ä–æ–∫–≤–∞—Ç. –í—ã—Ç–µ—Ä–µ—Ç—å —Ç—Ä—è–ø–∫–æ–π —Å –º–∏–∫—Ä–æ–∫–≤–∞—Ç–æ–º –º—É–∫—É —Å —Ä—É—á–µ–∫, —Å–º–æ—á–∏—Ç—å —Ç—Ä—è–ø–∫—É –≤–æ–¥–æ–π, –≤—ã—Ç–µ—Ä–µ—Ç—å –ø–æ–≤—Ç–æ—Ä–Ω–æ, –ø–æ–º—ã—Ç—å —Ä—É–∫–∏."
        ]
        for message in messages:
            await update.message.reply_text(message)
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ send_frying_info: {e}")
    await show_main_menu(update)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–∏
async def send_paniruem_info(update: Update):
    try:
        messages = [
            "–ü–µ—Ä–µ–¥ –ø–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ–º –Ω—É–∂–Ω–æ –ø—Ä–æ–≤–µ—Å—Ç–∏ –∏–Ω—Å–ø–µ–∫—Ü–∏—é –ø—Ä–æ–¥—É–∫—Ç–∞ –Ω–∞ —Å–∏–Ω—è–∫–∏, –∫—Ä–æ–≤–æ–ø–æ–¥—Ç—ë–∫–∏, –ø–µ—Ä—å—è, –∫—Ä–∏—Å—Ç–∞–ª–ª–∏–∫–∏ –ª—å–¥–∞, –ø–µ—Ä–µ–ª–æ–º—ã –∫–æ—Å—Ç–µ–π.",
            "–¢–∞–∫–∂–µ –∑–∞–ø–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –º—è—Å–æ –Ω–µ —Ö—Ä–∞–Ω–∏—Ç—Å—è (–Ω–∞–¥–æ —Å—Ä–∞–∑—É –≤–æ —Ñ—Ä–∏—Ç—é—Ä –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å).",
            "–ü–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º –ø–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –º–∞—à–∏–Ω–∫—É –ø–µ—Ä–µ–≤–æ–¥–∏–º –≤ —Ä–µ–∂–∏–º drop (–Ω–∞ –Ω–∞–≥—Ä–µ–≤).",
            "–ú—É–∫–∞ –ø—Ä–æ—Å–µ–∏–≤–∞–µ—Ç—Å—è –∫–∞–∂–¥—ã–µ –¥–≤–∞ —Ü–∏–∫–ª–∞, –∫–∞–∫ –∏ –º–µ–Ω—è–µ—Ç—Å—è –≤–æ–¥–∞. –ú—É–∫—É –Ω–∞–¥–æ –∑–∞—Å—ã–ø–∞—Ç—å –ø–æ –æ—Ç–º–µ—Ç–∫—É –≤ –≤–∞–Ω–Ω–µ.",
            "–í–æ–¥–∞ –¥–ª—è –ø–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–∞–±–∏—Ä–∞–µ—Ç—Å—è –Ω–∞ –∫—Ä–∞—é –Ω–∏–∂–Ω–µ–π –≤–∞–Ω–Ω—ã, –≤ —ç—Ç–æ—Ç –º–æ–º–µ–Ω—Ç –º—ã—Ç—å —Ä—É–∫–∏ –Ω–µ–ª—å–∑—è, –¥–∞–±—ã –∏–∑–±–µ–∂–∞—Ç—å –ø–µ—Ä–µ–∫—Ä—ë—Å—Ç–Ω–æ–≥–æ –∑–∞–≥—Ä—è–∑–Ω–µ–Ω–∏—è.",
            "–ü—Ä–∏–Ω—Ü–∏–ø—ã –ø–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è: –ö—Ä—ã–ª—å—è, –±–∞–π—Ç—Å—ã, —Å—Ç—Ä–∏–ø—Å—ã, —Ñ–∏–ª–µ - 7-10-7-7. –¢–æ –µ—Å—Ç—å: 7 —Ä–∞–∑ —Å–æ–±—Ä–∞—Ç—å-–ø–æ–¥–Ω—è—Ç—å —Å–æ–±—Ä–∞—Ç—å-–Ω–∞–∫—Ä—ã—Ç—å, 10 —Ä–∞–∑ –ø–æ—Ç—Ä—è—Å—Ç–∏ –æ—Ç –≤–ª–∞–≥–∏, 7 —Ä–∞–∑ —Å–æ–±—Ä–∞—Ç—å-–ø–æ–¥–Ω—è—Ç—å —Å–æ–±—Ä–∞—Ç—å-–Ω–∞–∫—Ä—ã—Ç—å, 7 —Ä–∞–∑ –ø—Ä–∏–¥–∞–≤–∏—Ç—å. –ù–æ–≥–∏ - 7-7-7. –¢–æ –µ—Å—Ç—å: 7 —Ä–∞–∑ —Å–æ–±—Ä–∞—Ç—å-–ø–æ–¥–Ω—è—Ç—å, 7 —Ä–∞–∑ —Å–æ–±—Ä–∞—Ç—å-–ø–æ–¥–Ω—è—Ç—å, 7 —Ä–∞–∑ –ø—Ä–∏–¥–∞–≤–∏—Ç—å."
        ]
        for message in messages:
            await update.message.reply_text(message)
        await update.message.reply_photo(photo="https://i.ibb.co/ym9Jd6w/paniruem.jpg")
        await update.message.reply_photo(photo="https://i.ibb.co/cvx3ryy/paniruem1.jpg")
        await update.message.reply_photo(photo="https://i.ibb.co/dgpJy6y/paniruem2.jpg")
        await update.message.reply_photo(photo="https://i.ibb.co/K9ydS0w/paniruem3.jpg")
        await update.message.reply_photo(photo="https://i.ibb.co/b5214qS/paniruem4.jpg")
        await update.message.reply_photo(photo="https://i.ibb.co/ggJWFQ0/paniruem5.jpg")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ send_paniruem_info: {e}")
    await show_main_menu(update)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –º–æ–π–∫–µ
async def send_washing_info(update: Update):
    try:
        messages = [
            "–ú–æ–π–∫–∞ –ø–æ—Å—É–¥—ã:",
            "–õ–µ–≤–∞—è –≤–∞–Ω–Ω–∞ –î–µ–∑–∏–Ω—Ñ–µ–∫—Ü–∏—è Micro Quat‚ùï–°—Ä–µ–¥–Ω—è—è –≤–∞–Ω–Ω–∞ –û–ø–æ–ª–∞—Å–∫–∏–≤–∞–Ω–∏–µ‚ùï –ü—Ä–∞–≤–∞—è –≤–∞–Ω–Ω–∞ –º–æ–π–∫–∞ ¬´ Lemon ¬ª‚ùï",
            "1) –ù–∞–ª–∏–≤–∞–µ–º —Ä–∞—Å—Ç–≤–æ—Ä –≤ –ø—Ä–∞–≤—É—é –≤–∞–Ω–Ω—É ¬´ Lemon ¬ª 1 –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ 36 –ª–∏—Ç—Ä–æ–≤ (t' 43-50) –î–æ –≥—Ä–∞–Ω–∏—Ü—ã —Å–∏–Ω–µ–π –ª–∏–Ω–∏–∏.",
            "2) –ù–∞–ª–∏–≤–∞–µ–º Micro Quat –≤ –ª–µ–≤—É—é –≤–∞–Ω–Ω—É—é –¥–µ–∑–∏–Ω—Ñ–µ–∫—Ü–∏—è, –∫–æ–Ω—Ü–µ–Ω—Ç—Ä–∞—Ü–∏—è 450ppm (0,05%). (t' 18-22). –î–ª—è 40 –ª–∏—Ç—Ä–æ–≤ —Ä–∞—Å—Ç–≤–æ—Ä–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ 5 –ª–∏—Ç—Ä–æ–≤ —Ä–∞—Å—Ç–≤–æ—Ä–∞ Micro Quat 4% –∏ 35 –ª–∏—Ç—Ä–æ–≤ —Ö–æ–ª–æ–¥–Ω–æ–π –≤–æ–¥—ã (t' 18-22). –î–ª—è 64 –ª–∏—Ç—Ä–æ–≤ 8 –ª–∏—Ç—Ä–æ–≤ —Ä–∞—Å—Ç–≤–æ—Ä–∞ Micro Quat 4% –∏ 56 –ª —Ö–æ–ª–æ–¥–Ω–æ–π –≤–æ–¥—ã (t' 18-22).",
            "3) –û—á–∏—â–∞–µ–º –ø–æ—Å—É–¥—É –∏ –∑–∞–º–∞—á–∏–≤–∞–µ–º –Ω–∞ 5-10 –º–∏–Ω—É—Ç –≤ –ø—Ä–∞–≤–æ–π –≤–∞–Ω–Ω–µ.",
            "4) –û–ø–æ–ª–∞—Å–∫–∏–≤–∞–µ–º –≤ —Å—Ä–µ–¥–Ω–µ–π –≤–∞–Ω–Ω–µ —Ç–µ–ø–ª–æ–π –≤–æ–¥–æ–π. –ï—Å–ª–∏ –µ—Å—Ç—å –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç—å, –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å —â–µ—Ç–∫–æ–π –¥–ª—è –º—ã—Ç—å—è –ø–æ—Å—É–¥—ã –∏–ª–∏ –ø–∞–¥–æ–º.",
            "5) –ó–∞–º–∞—á–∏–≤–∞–µ–º –≤ Micro Quat –Ω–∞ 15 –º–∏–Ω. (t' 18-22).",
            "6) –ü–æ—Å–ª–µ —Å–ø–æ–ª–∞—Å–∫–∏–≤–∞–µ–º –≤ —Å—Ä–µ–¥–Ω–µ–π –≤–∞–Ω–Ω–µ 65 t'.",
            "7) –°—Ç–∞–≤–∏–º —Å—É—à–∏—Ç—å—Å—è –Ω–∞ —Å—Ç–µ–ª–∞–∂ –º–æ–π–∫–∏ –≤ –ø–µ—Ä–µ–≤–µ—Ä–Ω—É—Ç–æ–º –≤–∏–¥–µ."
        ]
        for message in messages:
            await update.message.reply_text(message)
        await update.message.reply_photo(photo="https://i.ibb.co/gM9Dg44/washing2.jpg")
        await update.message.reply_photo(photo="https://i.ibb.co/GdJ455r/washing1.jpg")
        await update.message.reply_photo(photo="https://i.ibb.co/ccYYkPN/washing.jpg")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ send_washing_info: {e}")
    await show_main_menu(update)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å—Ä–æ–∫–∞—Ö —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ —Ä–∞–∑–¥–µ–ª–µ –ö—É—Ö–Ω–∏
async def send_srok_hraneniya_info(update: Update):
    try:
        await update.message.reply_photo(photo="https://i.ibb.co/dQ7r6Q8/srokp.jpg")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ send_srok_hraneniya_info: {e}")
    await show_main_menu(update)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–µ—Ä–≤–∏—Ä–æ–≤–∫–µ –∏ —Å–±–æ—Ä–∫–µ
async def send_servirovka_info(update: Update):
    try:
        await update.message.reply_photo(photo="https://i.ibb.co/QDbbfHd/servirovka.jpg")
        await update.message.reply_photo(photo="https://i.ibb.co/hKgz235/servirovka1.jpg")
        await update.message.reply_photo(photo="https://i.ibb.co/gjhYCb7/servirovka3.jpg")
        await update.message.reply_photo(photo="https://i.ibb.co/s95gGCb/servirovka4.jpg")
        await update.message.reply_photo(photo="https://i.ibb.co/kSPTF0p/servirovka5.jpg")
        await update.message.reply_photo(photo="https://i.ibb.co/Nn0WjSH/servirovka6.jpg")
        await update.message.reply_photo(photo="https://i.ibb.co/XJkJrjb/servirovka7.jpg")
        await update.message.reply_photo(photo="https://i.ibb.co/Jj9HZQH/servirovka8.jpg")
        await update.message.reply_photo(photo="https://i.ibb.co/L1kT4LV/servorovla2.jpg")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ send_servirovka_info: {e}")
    await show_main_menu(update)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –Ω–∞–ø–∏—Ç–∫–∞—Ö –∏ –¥–µ—Å–µ—Ä—Ç–∞—Ö
async def send_drinks_info(update: Update):
    try:
        await update.message.reply_photo(photo="https://i.ibb.co/t3KrLM8/drink.jpg")
        await update.message.reply_photo(photo="https://i.ibb.co/jg0PQ3j/drink1.jpg")
        await update.message.reply_photo(photo="https://i.ibb.co/xLVqBpy/drink2.jpg")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ send_drinks_info: {e}")
    await show_main_menu(update)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ñ—Ä–∏—Ç—é—Ä–µ
async def send_fryer_info(update: Update):
    try:
        await update.message.reply_photo(photo="https://i.ibb.co/VHMr1TN/fryer.jpg")
        await update.message.reply_photo(photo="https://i.ibb.co/ccqmscC/fryer2.jpg")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ send_fryer_info: {e}")
    await show_main_menu(update)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ "–û—Å—Ç–∞–ª—å–Ω–æ–µ"
async def send_other_info(update: Update):
    try:
        await update.message.reply_photo(photo="https://i.ibb.co/QNDth9B/other.jpg")
        await update.message.reply_photo(photo="https://i.ibb.co/F8y5HCK/other2.jpg")
        await update.message.reply_photo(photo="https://i.ibb.co/QK897J3/other3.jpg")
        await update.message.reply_photo(photo="https://i.ibb.co/PQBGR0m/other4.jpg")
        await update.message.reply_photo(photo="https://i.ibb.co/xJLJ9HK/other5.jpg")
        await update.message.reply_photo(photo="https://i.ibb.co/d6N9bwt/other6.jpg")
        await update.message.reply_photo(photo="https://i.ibb.co/YkMzB2G/other7.jpg")
        await update.message.reply_photo(photo="https://i.ibb.co/8KVFDgk/other8.jpg")
        await update.message.reply_photo(photo="https://i.ibb.co/DQgkJMm/other9.jpg")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ send_other_info: {e}")
    await show_main_menu(update)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å—Ä–æ–∫–∞—Ö –≥–æ–¥–Ω–æ—Å—Ç–∏ –∏ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–∏
async def send_srok_godnosti_info(update: Update):
    try:
        await update.message.reply_photo(photo="https://i.ibb.co/ykrNNPv/srok2.jpg")
        await update.message.reply_photo(photo="https://i.ibb.co/0Dtvw1C/srok3.jpg")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ send_srok_godnosti_info: {e}")
    await show_main_menu(update)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–æ—Å—Ç–∞–≤–∞—Ö
async def send_sostav_info(update: Update):
    try:
        await update.message.reply_photo(photo="https://i.ibb.co/wgDSCcb/sostav.jpg")
        await update.message.reply_photo(photo="https://i.ibb.co/Sf4CzZd/sostav.png")
        await update.message.reply_photo(photo="https://i.ibb.co/PNknk2J/sostav2.jpg")
        await update.message.reply_photo(photo="https://i.ibb.co/hsw5zgF/sostav2.png")
        await update.message.reply_photo(photo="https://i.ibb.co/BCNFH0R/sostav3.jpg")
        await update.message.reply_photo(photo="https://i.ibb.co/x22kBDk/Srok1.jpg")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ send_sostav_info: {e}")
    await show_main_menu(update)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏–∏ –∑–∞–º–µ—Å–∞
async def send_zames_info(update: Update):
    try:
        messages = [
            "–°–æ—Å—Ç–∞–≤ –∑–∞–º–µ—Å–∞ OR - –º–µ—à–æ–∫ –º—É–∫–∏, –º–æ–ª–æ—á–Ω–æ-—è–∏—á–Ω–∞—è —Å–º–µ—Å—å –ø–∞–∫–µ—Ç, –ø–∞–∫–µ—Ç –ø–µ—Ä—Ü–∞.",
            "–°–æ—Å—Ç–∞–≤ –∑–∞–º–µ—Å–∞ HS - –º–µ—à–æ–∫ –º—É–∫–∏, –ø–∞–∫–µ—Ç –æ—Å—Ç—Ä–æ-–ø—Ä—è–Ω–æ–π –ø–∞–Ω–∏—Ä–æ–≤–∫–∏. –°—Ä–æ–∫ –≥–æ–¥–Ω–æ—Å—Ç–∏ –∑–∞–º–µ—Å–∞ - 7 —Å—É—Ç–æ–∫."
        ]
        for message in messages:
            await update.message.reply_text(message)
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ send_zames_info: {e}")
    await show_main_menu(update)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
async def show_main_menu(update: Update):
    buttons = [["–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"]]
    reply_markup = ReplyKeyboardMarkup(buttons, one_time_keyboard=True, resize_keyboard=True)
    await update.message.reply_text("–í—ã–±–µ—Ä–∏ –¥–∞–ª—å–Ω–µ–π—à–µ–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=reply_markup)

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞
def main():
    logger.info("–ë–æ—Ç –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...")
    # –ó–∞–ø—É—Å–∫–∞–µ–º Flask —Å–µ—Ä–≤–µ—Ä
    keep_alive()

    # –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –±–æ—Ç–∞
    application = Application.builder().token(TOKEN).build()

    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
    application.add_handler(CommandHandler("start", start))
    logger.info("–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω.")

    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))
    logger.info("–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω.")

    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    logger.info("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –æ–∂–∏–¥–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–π...")
    application.run_polling()

if __name__ == "__main__":
    main()
